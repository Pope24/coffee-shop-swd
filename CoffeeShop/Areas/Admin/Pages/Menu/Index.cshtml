@page
@model CoffeeShop.Areas.Admin.Pages.Menu.IndexModel
@{
    ViewData["Title"] = "Menu Management";
}

<div class="container-fluid p-0">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <div>
            <h1 class="mb-0">Menu Management</h1>
            <p class="text-muted">Manage your coffee shop menu items and prices</p>
        </div>
        <a asp-area="Admin" asp-page="/Menu/CreateItem" class="btn btn-primary">
            <i class="fas fa-plus-circle me-2"></i>Add New Item
        </a>
    </div>

    <div class="admin-card mb-4">
        <div class="admin-card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0"><i class="fas fa-search me-2"></i>Search Menu Items</h5>
        </div>
        <div class="card-body">
            <form method="get" class="row g-3">
                <div class="col-md-8">
                    <div class="input-group">
                        <span class="input-group-text bg-coffee text-white">
                            <i class="fas fa-search"></i>
                        </span>
                        <input type="text" name="searchQuery" class="form-control" 
                               placeholder="Search by product or size name..." 
                               value="@Model.SearchQuery" />
                    </div>
                </div>
                <div class="col-md-4">
                    <button type="submit" class="btn btn-primary w-100">
                        <i class="fas fa-filter me-2"></i>Apply Filter
                    </button>
                </div>
            </form>
        </div>
    </div>

    <div class="admin-card">
        <div class="admin-card-header">
            <h5 class="mb-0"><i class="fas fa-coffee me-2"></i>Menu Items</h5>
        </div>
        <div class="card-body p-0">
            <div class="table-responsive">
                <table class="admin-table">
                    <thead>
                        <tr>
                            <th style="width: 40%">Product</th>
                            <th style="width: 40%">Sizes and Prices</th>
                            <th style="width: 20%">Actions</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var productGroup in Model.ProductSize.GroupBy(p => new { p.Product.ProductName, p.Product.ImageUrl }))
                        {
                            <tr>
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="product-image-container me-3" style="width: 80px; height: 80px; overflow: hidden; border-radius: 10px;">
                                            <img src="@productGroup.Key.ImageUrl" alt="@productGroup.Key.ProductName" 
                                                 style="width: 100%; height: 100%; object-fit: cover;" />
                                        </div>
                                        <div>
                                            <h5 class="mb-1">@productGroup.Key.ProductName</h5>
                                            <span class="badge bg-coffee-light text-coffee-dark">
                                                @productGroup.Count() size options
                                            </span>
                                        </div>
                                    </div>
                                </td>
                                <td>
                                    <div class="d-flex flex-wrap gap-2">
                                        @foreach (var item in productGroup)
                                        {
                                            <div class="size-price-badge">
                                                <span class="badge bg-coffee-medium text-white p-2">
                                                    @item.Size.SizeName - @item.Price.ToString("C")
                                                </span>
                                            </div>
                                        }
                                    </div>
                                </td>
                                <td>
                                    @if (User.IsInRole("Admin"))
                                    {
                                        <div class="d-flex flex-column gap-2">
                                            @foreach (var item in productGroup)
                                            {
                                                <a asp-area="Admin" asp-page="/Menu/EditItem" asp-route-id="@item.ProductSizeID" 
                                                   class="btn btn-sm btn-outline-primary">
                                                    <i class="fas fa-edit me-1"></i>Edit @item.Size.SizeName
                                                </a>
                                            }
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="d-flex flex-column gap-2">
                                            @foreach (var item in productGroup)
                                            {
                                                <form asp-page="./AddToCart" method="post">
                                                    <input type="hidden" name="ProductSizeID" value="@item.ProductSizeID" />
                                                    <button type="submit" class="btn btn-sm btn-primary">
                                                        <i class="fas fa-cart-plus me-1"></i>Add to Cart
                                                    </button>
                                                </form>
                                            }
                                        </div>
                                    }
                                </td>
                            </tr>
                        }
                        @if (!Model.ProductSize.Any())
                        {
                            <tr>
                                <td colspan="3" class="text-center py-4">
                                    <div class="empty-state">
                                        <i class="fas fa-coffee fa-3x text-coffee-light mb-3"></i>
                                        <h5>No menu items found</h5>
                                        <p class="text-muted">Try adjusting your search or add new items to your menu</p>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    @{
        var prevDisabled = !Model.ProductSize.HasPreviousPage ? "disabled" : "";
        var nextDisabled = !Model.ProductSize.HasNextPage ? "disabled" : "";
        int currentPage = Model.ProductSize.PageIndex;
        int totalPagesNumber = (int)Math.Ceiling((double)Model.ProductSize.TotalItems / 4);
    }

    <div class="pagination-container">
        <div class="pagination-info">
            Showing page @currentPage of @totalPagesNumber
        </div>
        <nav aria-label="Menu pagination">
            <ul class="pagination">
                <li class="page-item @prevDisabled">
                    <button onclick="navigateToPage(@(currentPage - 1))" class="page-link" @(prevDisabled == "disabled" ? "disabled" : "")>
                        <i class="fas fa-chevron-left"></i>
                    </button>
                </li>
                
                @{
                    var startPage = Math.Max(1, currentPage - 2);
                    var endPage = Math.Min(totalPagesNumber, startPage + 4);
                    
                    if (endPage - startPage < 4 && startPage > 1)
                    {
                        startPage = Math.Max(1, endPage - 4);
                    }
                }
                
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(currentPage == i ? "active" : "")">
                        <button onclick="navigateToPage(@i)" class="page-link">@i</button>
                    </li>
                }
                
                <li class="page-item @nextDisabled">
                    <button onclick="navigateToPage(@(currentPage + 1))" class="page-link" @(nextDisabled == "disabled" ? "disabled" : "")>
                        <i class="fas fa-chevron-right"></i>
                    </button>
                </li>
            </ul>
        </nav>
    </div>
</div>

<style>
    .size-price-badge {
        transition: all 0.2s ease;
    }
    
    .size-price-badge:hover {
        transform: translateY(-2px);
    }
    
    .bg-coffee-light {
        background-color: var(--coffee-light);
    }
    
    .text-coffee-dark {
        color: var(--coffee-dark);
    }
    
    .bg-coffee-medium {
        background-color: var(--coffee-medium);
    }
    
    .empty-state {
        padding: 30px;
        color: var(--coffee-secondary-text);
    }
</style>

<script>
    function navigateToPage(pageIndex) {
        const searchQuery = '@Model.SearchQuery';
        const baseUrl = '/Admin/Menu/Index';
        const url = `${baseUrl}?searchQuery=${encodeURIComponent(searchQuery)}&pageIndex=${pageIndex}`;
        window.location.href = url;
    }
</script>

