@page
@model CoffeeShop.Areas.Admin.Pages.IndexModel
@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "_LayoutAdmin";
}

<div class="admin-content-header">
    <h1>Dashboard Overview</h1>
    <div class="admin-actions">
        <button class="btn btn-outline-primary refresh-btn">
            <i class="bi bi-arrow-clockwise"></i> Refresh Data
        </button>
    </div>
</div>

<div class="admin-content-body">
    <!-- Stats Cards -->
    <div class="row stats-row">
        <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
            <div class="stats-card">
                <div class="stats-icon orders">
                    <i class="bi bi-cart3"></i>
                </div>
                <div class="stats-info">
                    <h3>@Model.TotalOrders</h3>
                    <p>Total Orders</p>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
            <div class="stats-card">
                <div class="stats-icon customers">
                    <i class="bi bi-people"></i>
                </div>
                <div class="stats-info">
                    <h3>@Model.TotalUsers</h3>
                    <p>Total Users</p>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
            <div class="stats-card">
                <div class="stats-icon products">
                    <i class="bi bi-cup-hot"></i>
                </div>
                <div class="stats-info">
                    <h3>@Model.TotalProducts</h3>
                    <p>Products</p>
                </div>
            </div>
        </div>
        
        <div class="col-xl-3 col-lg-6 col-md-6 mb-4">
            <div class="stats-card">
                <div class="stats-icon sales">
                    <i class="bi bi-currency-dollar"></i>
                </div>
                <div class="stats-info">
                    <h3>@Model.Revenue.ToString("#,##0")</h3>
                    <p>Revenue (VND)</p>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Charts & Activities -->
    <div class="row">
        <!-- Monthly Orders Chart -->
        <div class="col-lg-8 mb-4">
            <div class="admin-card">
                <div class="admin-card-header">
                    <h5><i class="bi bi-bar-chart"></i> Monthly Orders</h5>
                </div>
                <div class="admin-card-body">
                    <div class="chart-container">
                        <canvas id="ordersChart" height="300"></canvas>
                    </div>
                </div>
            </div>
        </div>
        
        <!-- Recent Activities -->
        <div class="col-lg-4 mb-4">
            <div class="admin-card">
                <div class="admin-card-header">
                    <h5><i class="bi bi-activity"></i> Recent Activities</h5>
                </div>
                <div class="admin-card-body p-0">
                    <ul class="activity-list">
                        @if (Model.RecentOrders.Any())
                        {
                            foreach (var order in Model.RecentOrders)
                            {
                                <li class="activity-item">
                                    <div class="activity-icon">
                                        <i class="bi bi-bag"></i>
                                    </div>
                                    <div class="activity-details">
                                        <div class="activity-title">Order #@order.OrderId</div>
                                        <div class="activity-time">@order.OrderDate.ToString("dd MMM, HH:mm")</div>
                                    </div>
                                    <span class="activity-status @(order.Status.ToLower() == "completed" ? "status-completed" : "status-pending")">
                                        @order.Status
                                    </span>
                                </li>
                            }
                        }
                        else
                        {
                            <li class="activity-empty">
                                <i class="bi bi-inbox"></i>
                                <p>No recent activities</p>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Top Products Table -->
    <div class="row">
        <div class="col-12 mb-4">
            <div class="admin-card">
                <div class="admin-card-header">
                    <h5><i class="bi bi-star"></i> Top Products</h5>
                </div>
                <div class="admin-card-body">
                    <div class="table-responsive">
                        <table class="table admin-table mb-0">
                            <thead>
                                <tr>
                                    <th>Product</th>
                                    <th>Category</th>
                                    <th>Price</th>
                                    <th>Orders</th>
                                    <th>Popularity</th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.TopProducts.Any())
                                {
                                    foreach (var product in Model.TopProducts)
                                    {
                                        <tr>
                                            <td>
                                                <div class="product-name">@product.Name</div>
                                            </td>
                                            <td>
                                                <span class="category-badge">@product.Category</span>
                                            </td>
                                            <td>@product.Price.ToString("#,##0") VND</td>
                                            <td>@product.OrderCount</td>
                                            <td>
                                                <div class="popularity-bar">
                                                    <div class="popularity-fill" style="width: @(product.OrderCount * 2)%"></div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                }
                                else
                                {
                                    <tr>
                                        <td colspan="5" class="text-center py-4">No products data available</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
    
    <!-- Quick Links -->
    <div class="row">
        <div class="col-12">
            <div class="quick-links">
                <a href="/Admin/Product/Index" class="quick-link-card">
                    <div class="quick-link-icon">
                        <i class="bi bi-cup"></i>
                    </div>
                    <div class="quick-link-text">Manage Products</div>
                </a>
                
                <a href="/Admin/Category/Index" class="quick-link-card">
                    <div class="quick-link-icon">
                        <i class="bi bi-tags"></i>
                    </div>
                    <div class="quick-link-text">Manage Categories</div>
                </a>
                
                <a href="/Admin/User/Index" class="quick-link-card">
                    <div class="quick-link-icon">
                        <i class="bi bi-people"></i>
                    </div>
                    <div class="quick-link-text">Manage Users</div>
                </a>
                
                <a href="/Admin/Tables/Index" class="quick-link-card">
                    <div class="quick-link-icon">
                        <i class="bi bi-grid-3x3"></i>
                    </div>
                    <div class="quick-link-text">Manage Tables</div>
                </a>
            </div>
        </div>
    </div>
</div>

<style>
    .admin-card {
        border-radius: 15px;
        overflow: hidden;
        box-shadow: 0 3px 15px rgba(0,0,0,0.06);
        background-color: white;
        margin-bottom: 20px;
    }
    
    .admin-card-header {
        background-color: var(--coffee-light);
        padding: 15px 20px;
        border-bottom: 2px solid var(--coffee-medium);
    }
    
    .admin-card-header h5 {
        margin: 0;
        color: var(--coffee-dark);
        font-weight: 600;
        display: flex;
        align-items: center;
        gap: 10px;
    }
    
    .admin-card-body {
        padding: 20px;
    }
    
    .activity-list {
        list-style: none;
        padding: 0;
        margin: 0;
    }
    
    .activity-item {
        display: flex;
        align-items: center;
        padding: 15px 20px;
        border-bottom: 1px solid var(--coffee-light);
        transition: background-color 0.2s;
    }
    
    .activity-item:last-child {
        border-bottom: none;
    }
    
    .activity-item:hover {
        background-color: rgba(215, 204, 200, 0.1);
    }
    
    .activity-icon {
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background-color: rgba(141, 110, 99, 0.1);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        color: var(--coffee-medium);
        font-size: 1.2rem;
    }
    
    .activity-details {
        flex: 1;
    }
    
    .activity-title {
        font-weight: 500;
        color: var(--coffee-dark);
        margin-bottom: 3px;
    }
    
    .activity-time {
        font-size: 0.8rem;
        color: var(--coffee-secondary-text);
    }
    
    .activity-status {
        padding: 4px 10px;
        border-radius: 20px;
        font-size: 0.75rem;
        font-weight: 500;
    }
    
    .status-completed {
        background-color: rgba(67, 160, 71, 0.1);
        color: var(--coffee-success);
    }
    
    .status-pending {
        background-color: rgba(255, 179, 0, 0.1);
        color: var(--coffee-warning);
    }
    
    .activity-empty {
        display: flex;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        padding: 40px 20px;
        color: var(--coffee-secondary-text);
        text-align: center;
    }
    
    .activity-empty i {
        font-size: 2rem;
        margin-bottom: 10px;
        opacity: 0.5;
    }
    
    .category-badge {
        background-color: var(--coffee-light);
        color: var(--coffee-dark);
        padding: 4px 10px;
        border-radius: 20px;
        font-size: 0.85rem;
        font-weight: 500;
    }
    
    .product-name {
        font-weight: 500;
        color: var(--coffee-dark);
    }
    
    .popularity-bar {
        height: 8px;
        background-color: #f0f0f0;
        border-radius: 4px;
        overflow: hidden;
        width: 100%;
    }
    
    .popularity-fill {
        height: 100%;
        background: linear-gradient(to right, var(--coffee-medium), var(--coffee-accent));
        border-radius: 4px;
    }
    
    .quick-links {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
        gap: 20px;
        margin-top: 10px;
    }
    
    .quick-link-card {
        background-color: white;
        border-radius: 15px;
        padding: 20px;
        display: flex;
        align-items: center;
        box-shadow: 0 3px 15px rgba(0,0,0,0.06);
        transition: all 0.3s;
        text-decoration: none;
    }
    
    .quick-link-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        text-decoration: none;
    }
    
    .quick-link-icon {
        width: 50px;
        height: 50px;
        border-radius: 50%;
        background-color: var(--coffee-light);
        display: flex;
        align-items: center;
        justify-content: center;
        margin-right: 15px;
        color: var(--coffee-dark);
        font-size: 1.5rem;
    }
    
    .quick-link-text {
        font-weight: 500;
        color: var(--coffee-dark);
    }
    
    .refresh-btn {
        display: flex;
        align-items: center;
        gap: 8px;
    }
    
    .chart-container {
        position: relative;
        height: 300px;
    }
</style>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Monthly orders chart
            const orderData = @Html.Raw(Json.Serialize(Model.MonthlyOrderData));
            const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
            
            const ctx = document.getElementById('ordersChart').getContext('2d');
            new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: months,
                    datasets: [{
                        label: 'Orders',
                        data: orderData,
                        backgroundColor: 'rgba(141, 110, 99, 0.7)',
                        borderColor: 'rgba(93, 64, 55, 1)',
                        borderWidth: 1,
                        borderRadius: 5,
                        barThickness: 15,
                    }]
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false
                        }
                    },
                    scales: {
                        y: {
                            beginAtZero: true,
                            grid: {
                                color: 'rgba(0, 0, 0, 0.05)'
                            },
                            ticks: {
                                precision: 0
                            }
                        },
                        x: {
                            grid: {
                                display: false
                            }
                        }
                    }
                }
            });
            
            // Refresh button functionality
            document.querySelector('.refresh-btn').addEventListener('click', function() {
                location.reload();
            });
        });
    </script>
}
