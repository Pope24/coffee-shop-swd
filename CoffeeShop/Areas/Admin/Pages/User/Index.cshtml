@page
@model CoffeeShop.Areas.Admin.Pages.User.IndexModel
@{
    ViewData["Title"] = "User Management";
}
@*---style start here---*@
<style>
    .index {
        height: 100%;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        border-radius: 10px;
    }

    .dropdown-toggle::after {
        display: none;
    }

    .table-container {
        overflow-x: hidden;
    }

        .table-container::-webkit-scrollbar {
            width: 5px; /* Set scrollbar width */
        }

        .table-container::-webkit-scrollbar-thumb {
            background-color: rgba(0, 0, 0, 0.01);
            border-radius: 4px;
        }

        .table-container::-webkit-scrollbar-track {
            background-color: transparent;
        }

        .table-container:hover::-webkit-scrollbar-thumb {
            background-color: rgba(0, 0, 0, 0.3);
        }

    .btn-link i {
        color: #333; /* Adjust color as needed */
        font-size: 1.2em;
        padding: 0.2em;
    }

    .btn-link{
        border: none;
        background: none;
    }
</style>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css">
@*---style end here---*@

<div class="shadow border-1 border p-2 index d-flex justify-content-between">

    <div class="h-auto overflow-scroll table-container">
        <div class="mb-3">
            <div class="d-flex justify-content-center search-container d-none">
                <form asp-page-handler="Search" method="post" class="d-flex align-items-center ">
                    <select name="searchBy" class="form-select form-select-sm me-2" style="width: auto;">
                        <option value="Username">Username</option>
                        <option value="Email">Email</option>
                        <option value="Fullname">Full Name</option>
                    </select>

                    <input name="search" type="text" class="form-control form-control-sm me-2" placeholder="Search..." style="width: auto;" />

                    <button type="submit" class="btn btn-link p-0">
                        <i class="fa-solid fa-search"></i>
                    </button>
                </form>
            </div>
            <h2 class="text-center title">
                User Management 
                <button class="btn btn-link p-0" id="searchIcon">
                    <i class="fa-solid fa-search"></i>
                </button>
            </h2>
        </div>
        <div class="d-flex justify-content-between mb-2">
            <a class="btn btn-outline-primary ms-2" asp-page="Create"> Add New User</a>
            <div class="btn-group w-auto h-auto">
                <button type="button" class="btn btn-sm btn-outline-dark dropdown-toggle" data-bs-toggle="dropdown" aria-expanded="false">
                    <i class="fa-solid fa-sort"></i>
                </button>
                <ul class="dropdown-menu p-3">
                    <li>
                        <strong>Sort by:</strong>
                        <select id="sortby" class="form-select form-select-sm mt-1">
                            <option value="username">Username</option>
                            <option value="email">Email</option>
                            <option value="fullname">Full Name</option>
                        </select>
                    </li>

                    <hr class="dropdown-divider">

                    <li>
                        <strong>Sort direction:</strong>
                        <select id="dir" class="form-select form-select-sm mt-1">
                            <option value="true">Ascending</option>
                            <option value="false">Descending</option>
                        </select>
                    </li>

                    <hr class="dropdown-divider">

                    <li>
                        <strong>Account type:</strong>
                        <select id="include" class="form-select form-select-sm mt-1">
                            <option value="all">All</option>
                            <option value="user">User only</option>
                            <option value="admin">Admin only</option>
                        </select>
                    </li>
                    <hr class="dropdown-divider">
                    <li class="text-end">
                        <a id="applyFilter" class="btn btn-outline-dark">
                            Apply
                        </a>
                    </li>
                </ul>
            </div>
        </div>

        <table class="table shadow border h-auto border-top-0">
            <thead class="text-center">
                <tr>
                    <th>
                        Phone Number
                    </th>
                    <th>
                        UserName
                    </th>
                    <th>
                        Full Name
                    </th>
                    <th>
                        Account Type
                    </th>
                    <th>
                        Email
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody class="text-center">
                @foreach (var item in Model.Users)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.PhoneNumber)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Username)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.FullName)
                        </td>
                        <td>
                            @switch (item.AccountType)
                            {
                                case 0:
                                    <span>Customer</span>
                                    break;
                                case 1:
                                    <span>Admin</span>
                                    break;
                                default: break;
                            }
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Email)
                        </td>
                        <td>
                            <div class="dropdown">
                                <button class="btn btn-sm btn-outline-secondary dropdown-toggle" type="button" id="dropdownMenuButton" data-bs-toggle="dropdown" aria-expanded="false">
                                    ...
                                </button>
                                <ul class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                                    <li><a class="dropdown-item text-success" asp-page="./Edit" asp-route-id="@item.UserID">Edit</a></li>
                                    <li><a class="dropdown-item text-dark" asp-page="./Details" asp-route-id="@item.UserID">Details</a></li>
                                    <li><a class="dropdown-item text-danger" asp-page="./Delete" asp-route-id="@item.UserID">Delete</a></li>
                                </ul>
                            </div>



                        </td>
                    </tr>
                }
            </tbody>
        </table>

    </div>
    <div class="pagination-container">
        <div class="pagination-info">
            <span>Rows per page:</span>
            <select asp-items="@Model.PageSizeList" id="pageSizeSelector" class="pagination-size-selector">
            </select>
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination">
                <li class="page-item @(!Model.Users.HasPreviousPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-route-pageIndex="@(Model.Users.PageIndex-1)"
                       asp-route-pageSize="@Model.Users.PageSize">
                        <i class="fas fa-chevron-left"></i>
                    </a>
                </li>
                
                @{
                    var startPage = Math.Max(1, Model.Users.PageIndex - 2);
                    var endPage = Math.Min(Model.Users.TotalPages, startPage + 4);
                    
                    if (endPage - startPage < 4 && startPage > 1)
                    {
                        startPage = Math.Max(1, endPage - 4);
                    }
                }
                
                @for (int i = startPage; i <= endPage; i++)
                {
                    <li class="page-item @(Model.Users.PageIndex == i ? "active" : "")">
                        <a class="page-link"
                           asp-route-pageIndex="@i"
                           asp-route-pageSize="@Model.Users.PageSize">@i</a>
                    </li>
                }
                
                <li class="page-item @(!Model.Users.HasNextPage ? "disabled" : "")">
                    <a class="page-link"
                       asp-route-pageIndex="@(Model.Users.PageIndex+1)"
                       asp-route-pageSize="@Model.Users.PageSize">
                        <i class="fas fa-chevron-right"></i>
                    </a>
                </li>
            </ul>
        </nav>
    </div>

</div>

@section Scripts
{
    <script>
        $(document).ready(function () {
            var navbarHeight = $('.custom-sidebar').outerHeight() + 'px';
            $('.index').css('height', navbarHeight);
        });
        $('#searchIcon').on('click', function () {
            $('.title').addClass('collapse');
            $('.search-container').removeClass('d-none');
        });
        $(document).on('click', function (event) {
            // Check if the click target is outside the `.search-container` and the `#searchIcon` button
            if (!$(event.target).closest('.search-container, #searchIcon').length) {
                $('.title').removeClass('collapse');
                $('.search-container').addClass('d-none');
            }
        });
        $('#pageSizeSelector').on('change', function () {
            var pageSize = $(this).val();
            var currentUrl = window.location.href;
            var url = new URL(currentUrl);
            url.searchParams.set('pageSize', pageSize);
            url.searchParams.set('pageIndex', 1);
            window.location.href = url.toString();
        });
        $('#applyFilter').on('click', function () {
            var sortBy = $('#sortby').val();
            var dir = $('#dir').val();
            var include = $('#include').val();
            var url = new URL(window.location.href);
            url.searchParams.set('sortBy', sortBy);
            url.searchParams.set('dir', dir);
            url.searchParams.set('include', include);
            url.searchParams.set('pageIndex', 1);
            window.location.href = url.toString();
        });
    </script>
}