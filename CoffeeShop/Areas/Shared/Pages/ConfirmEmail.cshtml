@page
@model CoffeeShop.Areas.Shared.Pages.ConfirmEmailModel
@{
    ViewData["Title"] = "Confirm Email";
}

<div class="container">
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card mt-5">
                <div class="card-header text-center">
                    <h4>Enter OTP to Confirm Email</h4>
                    <p class="text-danger">The OTP will going to expired within 3 min</p>
                </div>
                <div class="card-body">
                    <form method="post" id="otpForm">
                        <div class="form-group d-flex justify-content-between">
                            <input type="text" id="otp1" maxlength="1" class="form-control otp-input" required>
                            <input type="text" id="otp2" maxlength="1" class="form-control otp-input" required>
                            <input type="text" id="otp3" maxlength="1" class="form-control otp-input" required>
                            <input type="text" id="otp4" maxlength="1" class="form-control otp-input" required>
                            <input type="text" id="otp5" maxlength="1" class="form-control otp-input" required>
                            <input type="text" id="otp6" maxlength="1" class="form-control otp-input" required>
                        </div>
                        <div class="d-flex justify-content-center">
                            <button type="submit" class="btn btn-primary btn-block mt-3">Confirm</button>
                        </div>
                    </form>

                    @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                    {
                        <div class="alert alert-danger mt-3">
                            @Model.ErrorMessage
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto focus next input
        document.querySelectorAll('.otp-input').forEach((input, index, inputs) => {
            input.addEventListener('input', (e) => {
                if (e.target.value.length === 1 && index < inputs.length - 1) {
                    inputs[index + 1].focus();
                }
            });
        });
    </script>
}
